apiVersion: v1
kind: Secret
metadata:
  name: micro-agent-secrets
  namespace: micro-agent-platform
  labels:
    app.kubernetes.io/name: micro-agent-platform
    app.kubernetes.io/component: secrets
    app.kubernetes.io/version: "1.0.0"
type: Opaque
stringData:
  # API Security
  API_KEY: "your-secure-api-key-here-change-in-production"
  SECRET_KEY: "your-super-secret-flask-key-here-minimum-32-characters"
  JWT_SECRET_KEY: "your-jwt-secret-key-for-authentication"
  
  # LLM Provider API Keys (Base64 encoded for security)
  GEMINI_API_KEY: "your-gemini-api-key-here"
  OPENAI_API_KEY: "your-openai-api-key-here"
  ANTHROPIC_API_KEY: "your-anthropic-api-key-here"
  AZURE_OPENAI_API_KEY: "your-azure-openai-api-key-here"
  AZURE_OPENAI_ENDPOINT: "https://your-resource.openai.azure.com/"
  
  # Redis Authentication
  REDIS_PASSWORD: "your-secure-redis-password-here"
  
  # Monitoring Authentication
  GRAFANA_ADMIN_PASSWORD: "secure-grafana-password-here"
  
  # External Service Keys (Optional)
  SENTRY_DSN: "your-sentry-dsn-for-error-tracking"
  NEW_RELIC_LICENSE_KEY: "your-new-relic-license-key"
  DATADOG_API_KEY: "your-datadog-api-key"

---
apiVersion: v1
kind: Secret
metadata:
  name: registry-secret
  namespace: micro-agent-platform
  labels:
    app.kubernetes.io/name: micro-agent-platform
    app.kubernetes.io/component: registry-auth
type: kubernetes.io/dockerconfigjson
data:
  # Base64 encoded Docker registry credentials
  # Generate with: kubectl create secret docker-registry registry-secret --docker-server=your-registry.com --docker-username=your-username --docker-password=your-password --docker-email=your-email@example.com --dry-run=client -o yaml | grep '\.dockerconfigjson:' | cut -d' ' -f4
  .dockerconfigjson: e30K  # Empty JSON object, replace with actual credentials