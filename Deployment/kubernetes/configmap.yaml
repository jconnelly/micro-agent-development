apiVersion: v1
kind: ConfigMap
metadata:
  name: micro-agent-config
  namespace: micro-agent-platform
  labels:
    app.kubernetes.io/name: micro-agent-platform
    app.kubernetes.io/component: config
    app.kubernetes.io/version: "1.0.0"
data:
  # Application Configuration
  FLASK_ENV: "production"
  FLASK_DEBUG: "0"
  API_PORT: "8000"
  
  # Logging Configuration
  LOG_LEVEL: "INFO"
  AUDIT_LOG_LEVEL: "2"
  LOG_FILE_PATH: "/app/logs/app.log"
  AUDIT_LOG_FILE_PATH: "/app/logs/audit.jsonl"
  
  # Performance Configuration
  WORKERS: "4"
  WORKER_TIMEOUT: "120"
  MAX_REQUESTS: "1000"
  MAX_REQUESTS_JITTER: "100"
  
  # Rate Limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_PER_MINUTE: "60"
  RATE_LIMIT_PER_HOUR: "1000"
  
  # Cache Configuration
  REDIS_ENABLED: "true"
  REDIS_HOST: "micro-agent-redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  CACHE_TTL: "3600"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  HEALTH_CHECK_ENABLED: "true"
  
  # Business Configuration
  DEFAULT_PII_CONTEXT: "general"
  DEFAULT_MASKING_STRATEGY: "partial_mask"
  DEFAULT_AUDIT_LEVEL: "2"
  DEFAULT_LLM_PROVIDER: "gemini"
  
  # Processing Limits
  MAX_FILE_SIZE_MB: "50"
  MAX_CHUNK_SIZE: "175"
  PROCESSING_TIMEOUT_SECONDS: "300"
  RATE_LIMIT_REQUESTS_PER_MINUTE: "100"
  
  # CORS Configuration
  CORS_ORIGINS: "https://yourdomain.com,https://api.yourdomain.com"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: micro-agent-platform
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      scrape_timeout: 10s
      evaluation_interval: 15s

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Prometheus self-monitoring
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API server monitoring
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes nodes monitoring
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Micro-Agent API monitoring
      - job_name: 'micro-agent-api'
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - micro-agent-platform
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: micro-agent-api
          - source_labels: [__meta_kubernetes_service_port_name]
            action: keep
            regex: http
        metrics_path: /api/v1/metrics
        scrape_interval: 15s

      # Pod monitoring
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - micro-agent-platform
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name